#!/bin/bash

set -o nounset
set -o errexit
shopt -s inherit_errexit
shopt -s lastpipe

function install-cldr {
	local state_dir=$1
	printf 'Installing cldr data...\n' >&2
	cd "$state_dir"
	if ! cldr_url=$(
		curl -s https://api.github.com/repos/unicode-org/cldr-json/releases/latest |
			jq -r '
				.assets[] |
				select(.name | test("modern.zip$")) |
				.browser_download_url'
	); then
		printf 'ERROR: Unable to determine download url\n' >&2
		return 1
	fi
	if [[ -z "$cldr_url" ]]; then
		printf 'ERROR: Unable to determine download url\n' >&2
		return 1
	fi
	if ! curl -Ls "$cldr_url" >cldr-json.zip; then
		printf 'ERROR: Unable to download cldr zip\n' >&2
		return 1
	fi
	unzip -q cldr-json.zip
	rm cldr-json.zip
	return 0
}

function short-code-emoji {
	local short_code=$1
	local cldr_file=$2
	local tts=${short_code//_/ }
	local emoji
	if ! emoji=$(
		jq -r --arg tts "${tts}" '
		  .annotations.annotations |
			to_entries[] |
			select(.value.tts[0] == $tts) |
			.key' <"$cldr_file"
	); then
		printf 'ERROR: Unable to parse cldr json\n' >&2
		return 1
	fi
	if [[ -z "$emoji" ]]; then
		printf '?%s?\n' "$short_code"
	else
		printf '%s\n' "$emoji"
	fi
	return 0
}

function parse-text {
	local cldr_file=$1
	local emoji
	local char
	local parsing_code='false'
	local code_accum=''
	while IFS= read -r -N1 char; do
		if [[ $char != ':' ]]; then
			if [[ $parsing_code == 'false' ]]; then
				printf '%s' "$char"
				continue
			else
				if [[ $char =~ [a-z_-] ]]; then
					code_accum+=$char
					continue
				else
					printf ':%s%s' "$code_accum" "$char"
					parsing_code='false'
					continue
				fi
			fi
		else
			if [[ $parsing_code == 'true' ]]; then
				if ! emoji=$(short-code-emoji "$code_accum" "$cldr_file"); then
					printf 'ERROR: Unable to get emoji for :%s:\n' "$code_accum" >&2
					return 1
				fi
				printf '%s' "$emoji"
				parsing_code='false'
				continue
			else
				parsing_code='true'
				code_accum=''
				continue
			fi
		fi
	done
	return 0
}

function main {
	local state_dir="${XDG_DATA_HOME:-$HOME}/.local/share/emojify"
	local cldr_file="${state_dir}/cldr-annotations-modern/annotations/en/annotations.json"
	if ! [[ -e "$cldr_file" ]]; then
		mkdir -p "$state_dir"
		install-cldr "$state_dir"
	fi
	parse-text "$cldr_file"
}

main "$@"
